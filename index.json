{"project": "stingray", "project_url": "http://docs.stingray.science/", "show_commit_url": "http://github.com/stingraysoftware/stingray/commit/", "hash_length": 8, "revision_to_hash": {"63": "3f07df9a918553a40187def521d50afe9347ad1f", "108": "6c697adefed414568fddeb8c2e3f632a2d17f663", "132": "66fe87c0cf7f4fae03367f1a08e4bb4440d52d6e", "187": "345987b3f32422aefc6133096260bb570652f869", "229": "49488964e3fdc84b1427f4e028e877341a7c6092", "259": "a0b135602e82a170c3cd5963a9d4c96abe04fd62", "332": "df6b07a42665e253bb4dda5fe22e7ae19dbb063d", "354": "87fbe9940cd1125a50c4811397e6568a38a5429c", "397": "7d4efd2f19fa6f5c3b61a82cbab5c2255de3cb86", "494": "76ad110ed3fa356cec062e65838bafcebf350733", "600": "b3cf7af743f4d77cafc7a52cdf49543e907c4546", "665": "f6c806d6e26804c988c301ae07adfe8aaf5b20c5", "742": "9015d7e506ac680c5afc3f586abefdff71a64f5f", "818": "316e4bceba355f9242766580cd0646c54f4e3d0c", "910": "da5ca65ea37d951d8e1906cc74ba180702b77b5b", "982": "470824a85e668608cbebef19b069fffdfaa12165", "1022": "643883748fa0ff6a6e20ecb1d5168a3ec489cdb0", "1080": "efc4f2488e04b49591a3696ac6adaac7f91c029a", "1109": "513e37905b8123e763a5b0547099e5a47fc73573", "1185": "96f838f13fbc6886a74a7d6d3cedfff202dc56d4", "1232": "9849b694023e2637812e92b5dd617620d673f46f", "1272": "b59b848771f3d46ed065c787460359d5a3d21946", "1326": "ee56ae7f30952889dad8bad552156d37f6e6232b", "1361": "07c9782d24926b3174c42a4a4649c2e2da9c7639", "1401": "9ffc6e2f66e7010fdcce01c67d68665de1704cd3", "1434": "72f08cba0000f297d141681565c6de6101b5ad3c", "1460": "6f21046cc6daf7b5db6813525eb1f7c54fc1b2a1", "1535": "6f3d8fc09015e40e1def79e0070806fd12528949", "1563": "a421deff7e0045c954dc229963b1a6192fc2b1a4", "1600": "7ae50b7122a3ee7caf25ca638eb73485f0c23d0b", "1643": "7242a3ba995c94cb88428e96205e445344d7af53", "1656": "e4f82e8b201991c3d52d66426857d74e1c1e9a3a", "1672": "a7bca309c304ffae1244f7eb1dee902d62eaf6a7", "1694": "4a6cab5923e596d7e2cbd4148f0fac6e7ffa1ab4", "1737": "57a441777eaafbb828ffa05cb0feffec8070787f", "1750": "985ecbefacf210f9fe8f8e50dc739eaea3dd6ea2", "1761": "ffcd4f20bc964e33ea7f0f471e308c9732919dfc", "1805": "8a9fc591101aba3236ff3c02030848a4d9287fd0", "1874": "86a9feec92836a78cff4005d024772f870f96188", "1890": "015cefd24bccf18773b2625b0cc98df248d41013", "1941": "d429e99852e2708b1e3ab026fc86b9dbfae5f43f", "1942": "c3d72a58eb2270a7a94655f7f3a393c6e4ecbb49", "1986": "eb200903f558a753114832ef7f72ad5c0f906423", "2065": "5a1ddbb11a35a20c2f25ba0800c8327a1a60d9eb", "2089": "462656040860d2a8df08ec7d5b533d2dcbda9a4f", "2126": "53ff4fff8679763018621dd23ee2cf637e811af6", "2150": "9f56b07b7193e3aa60de868b9cccaaa0ffa5c497", "2166": "721d9ea88f79b3740e326b25ad5af134d16bcab5", "2202": "08b77654a18331c1745c34e340bfc8db83f22411", "2218": "a5e9830cc55086537d532eab2872aa7332a7e5f3", "2220": "afdb6a5e0d52ada7e2150831710b9b8bb60c223f", "2223": "955b0d4a5920b05c293c70409540a16d512d7130", "2235": "2c3142e5793034523c6a172a10c70048bc9313a0", "2250": "f9c2b3dfef34fb4f2e48d866fd5218bffc995c7c", "2280": "2813e0924c0934fc10a510d373dff2f75ae82800", "2414": "0196d5ce64e8a386f412faadcb6abd6051029caa", "2487": "d43412683cf7822cad7f0eb0e55f9548fcd26616", "2504": "5fc93505c96e0229ff016ca0ea51be48f87eaaf0", "2561": "7ed76156542ec37677530467a3052d439740793f", "2570": "cf517f1304485a7b3d0de7187e877da65cdf2bbc", "2683": "d0b7ac881f0f825ced61280df1b2a129369d5730", "2719": "88e22137bfcaf8040912baeba26b6e2b5512cf35", "2744": "d6995e574e9edba1e0d1ee24fe7d905d991d29ee", "2799": "92c8817703f0b7af47117b9a1f92b2c65e74d799", "2840": "8295a7bd5ed444bcf01c8102d50760ec6eb8fa4e", "2854": "b4f67e3628589692e5ddb931cb47ac1cf0308b28", "2890": "ce504d48d35a79646505fad6596ccfb39c75ac87", "2915": "b9ba3dbdb2137020e47ebaf8c8e6559ac592ea16", "2938": "7c2e97be86a5981faecdc3f1d493cf2424bcc6a5", "2963": "10530b4dbcde6c0ef8228c0e634aa202b186cf22", "2999": "c0bdcf29c91452e52f2d6b66d3063d22b0b77c68", "3016": "198a030b503a73a601a868974a2cdb1c0c005687", "3026": "4a288222d350d3d8b0e90fac18313bb8c4d99e7f", "3031": "24f1784752d6792c74680408bae82bd38d4d2051", "3093": "d255e3ced23e97d297be7d8d659ddf163b808064", "3245": "93f06ceb245e2f7f03820a94e84fddd16dffb9f9", "3297": "e952762ebc098de42d8decf2d0df34f9e9b0c200", "3484": "429a6c4217634cde92d4749eedf161137e94092a", "3518": "aa6aec11cd91f752766e850ac310e281c29babc3", "3530": "4651dcbc14192672f4b05ae1c9aae7b6260314ec", "3561": "acb04fec9c932c4118183929917d23d4b14fee8a", "3567": "8b4b3e7f96c47ed6cd21b354af396dcffabf2817", "3577": "26d544697e87ddc7431997a6b818564a2da1ec5c", "3642": "1bd574a284dfe60177e3313d50cc5700f4d1ec42", "3691": "f7c981df28103c675c5b546b1b21bc5fa2162453", "3742": "91d7af64ade0375a427e3410dc4581d5be06e08a", "3743": "d943507d1a5b42c45881d3d24a0761b49c205c24", "3760": "6eda2cb7640ac14b2bb633a75d0a20176bf6d2ce", "3776": "50e19448fccd2d3d2812cc3f60328b3a766d7e8f", "3779": "9a27f55b674320bcdd083f23b12f50ac969f938f", "3803": "74d555c64798781ad8bd61ecccacb87149e06971", "3845": "e3a10bdd931f974d82c932bd7419c6f1a48cb235", "3887": "a417cc15aa794b0de033b0b9e56c497b800490ab", "3906": "5f13650cdc9145c1ae363c28159fde517e75d055", "3946": "900d81ab609e6afdc020591cbb66c04a8029ce38", "3971": "80cee7a6cb864ff80d1a5e76e71d68e132a2f3f3", "4026": "0766abfed8ae3396259aeae64263224737b9474f", "4055": "f3d75e87cfb66862975cff8b1223e4032f7f71eb", "4082": "5ecad8667edcbe93ef4d65c5df7dbef8c3881db6", "4118": "c89490b21eaff990632fabd4e49d79e1ea53268c", "4212": "34e6a94fc1c7c723a03073ee9de9d9956dc977bf", "4245": "d8c5ee735aaede6b2440263fa328a61ecb559204", "4250": "fe45a3cec9475bc831d86a06161613ee99ad11ff", "4253": "eb75394dfdca85aabdb138ebe6d45cafadf09cc3", "4259": "bad002867d83613a8cffcb5c217d5e14740c4694", "4260": "6a58524042bf32e14570b4d5b499fdd044b48a7b", "4270": "4e137860711b25efffd5bb17e6e4e7b1a3c3eebf", "4299": "424fa59440531d05afeaf537e81184281030eac5", "4457": "490a7c74b771eb75cbcb77e16dd34c90ecfcfa0f", "4559": "bfa7390ebd25a6feae9df5bd74ec54346bf3be50", "4605": "0ea0cbf0942dfa7bbeca05dae03b25e3d80ef6d0", "4606": "5285c23221ed81c946007e8ae116c84fdc9947d4", "4612": "d47c95b42f1c1697b1a4207ff64e2970418756b9", "4647": "bdc25cdbf249f37fce05eb552f1a7741bd5297da", "4648": "96752043955cf343736b4b6d951a71b4858e06a8", "4658": "406853987def5e69bef4747725dd83dec7df1d41", "4679": "7377187db3cdabffdee27e0efe51d9207d603cc4", "4689": "e4e477caff85074fdf5acd93124f34e6b85d811a", "4698": "de9400a6ee5514539c13b62ba1926c51e6a1348e", "4746": "14756d922eaf427703dfc6311cc2688702f9c701"}, "revision_to_date": {"63": 1445129336000, "108": 1449512487000, "132": 1453662298000, "187": 1456909996000, "229": 1457090447000, "259": 1457111571000, "332": 1457531236000, "354": 1457982647000, "397": 1459949738000, "494": 1464973569000, "600": 1467422479000, "665": 1468099669000, "742": 1469707909000, "818": 1470512473000, "910": 1471285564000, "982": 1472317012000, "1022": 1474411308000, "1080": 1488131582000, "1109": 1490398657000, "1185": 1492520919000, "1232": 1495036778000, "1272": 1497898110000, "1326": 1498738508000, "1361": 1500316234000, "1401": 1500821308000, "1434": 1501076570000, "1460": 1501094374000, "1535": 1501917515000, "1563": 1502480795000, "1600": 1502891977000, "1643": 1504630571000, "1656": 1504981705000, "1672": 1505546292000, "1694": 1508108102000, "1737": 1510678560000, "1750": 1511780411000, "1761": 1514578349000, "1805": 1517600911000, "1874": 1518095063000, "1890": 1518111363000, "1941": 1518454471000, "1942": 1518456888000, "1986": 1519656064000, "2065": 1531278500000, "2089": 1537994787000, "2126": 1548825284000, "2150": 1555546502000, "2166": 1556750588000, "2202": 1559191012000, "2218": 1560204023000, "2220": 1560211728000, "2223": 1560212798000, "2235": 1562025043000, "2250": 1565004627000, "2280": 1571844762000, "2414": 1578578442000, "2487": 1589727029000, "2504": 1590481916000, "2561": 1592341189000, "2570": 1592377776000, "2683": 1599229309000, "2719": 1605276589000, "2744": 1610967012000, "2799": 1611134020000, "2840": 1611158307000, "2854": 1611236289000, "2890": 1611338727000, "2915": 1611604255000, "2938": 1613467098000, "2963": 1618244043000, "2999": 1619797849000, "3016": 1620662271000, "3026": 1621261412000, "3031": 1622578178000, "3093": 1635948068000, "3245": 1638257178000, "3297": 1639581791000, "3484": 1644226670000, "3518": 1644653359000, "3530": 1645145381000, "3561": 1645448501000, "3567": 1645699396000, "3577": 1646299854000, "3642": 1648572733000, "3691": 1661333605000, "3742": 1664639850000, "3743": 1664639868000, "3760": 1665396822000, "3776": 1665584633000, "3779": 1666443295000, "3803": 1672131153000, "3845": 1678176843000, "3887": 1681373191000, "3906": 1682942999000, "3946": 1684842084000, "3971": 1685014866000, "4026": 1687202960000, "4055": 1692606720000, "4082": 1693607823000, "4118": 1695224092000, "4212": 1695983644000, "4245": 1696948651000, "4250": 1696951174000, "4253": 1697014353000, "4259": 1697186860000, "4260": 1697187973000, "4270": 1697909875000, "4299": 1700124930000, "4457": 1704287870000, "4559": 1705738726000, "4605": 1706779419000, "4606": 1706780273000, "4612": 1707736068000, "4647": 1708508887000, "4648": 1708510274000, "4658": 1710327331000, "4679": 1710333892000, "4689": 1710353529000, "4698": 1711709561000, "4746": 1713501853000}, "params": {"arch": ["x86_64"], "cpu": ["Intel(R) Core(TM) i7-7660U CPU @ 2.50GHz"], "machine": ["portabile2"], "os": ["Darwin 17.5.0"], "ram": ["17179869184"], "python": ["3.11"], "branch": ["main"]}, "graph_param_list": [{"arch": "x86_64", "cpu": "Intel(R) Core(TM) i7-7660U CPU @ 2.50GHz", "machine": "portabile2", "os": "Darwin 17.5.0", "ram": "17179869184", "python": "3.11", "branch": "main"}], "benchmarks": {"benchmarks.NonUniformSuite.time_eventlist_creation_no_checks": {"code": "class NonUniformSuite:\n    def time_eventlist_creation_no_checks(self, data):\n        stingray.events.EventList(data.times, gti=data.gti, skip_checks=True)\n\n    def setup_cache(self):\n        data = types.SimpleNamespace()\n        data.gti = np.array([[0, 1000]])\n        data.times_unsorted = np.random.uniform(\n            data.gti[0, 0], data.gti[-1, 1], 10000000\n        )\n    \n        data.times = np.sort(data.times_unsorted)\n        return data", "min_run_count": 2, "name": "benchmarks.NonUniformSuite.time_eventlist_creation_no_checks", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "benchmarks:19", "type": "time", "unit": "seconds", "version": "b11c932c724dc89315d5381ba77cb2a56aed195237562518624e5b0d6a5a80b9", "warmup_time": -1}, "benchmarks.NonUniformSuite.time_eventlist_creation_with_checks": {"code": "class NonUniformSuite:\n    def time_eventlist_creation_with_checks(self, data):\n        stingray.events.EventList(data.times, gti=data.gti)\n\n    def setup_cache(self):\n        data = types.SimpleNamespace()\n        data.gti = np.array([[0, 1000]])\n        data.times_unsorted = np.random.uniform(\n            data.gti[0, 0], data.gti[-1, 1], 10000000\n        )\n    \n        data.times = np.sort(data.times_unsorted)\n        return data", "min_run_count": 2, "name": "benchmarks.NonUniformSuite.time_eventlist_creation_with_checks", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "benchmarks:19", "type": "time", "unit": "seconds", "version": "e4d0a93ee59f11c55fceaa9da64c7c246ddf4b77b6c9792e109ec78e3368ff25", "warmup_time": -1}, "benchmarks.NonUniformSuite.time_lightcurve_creation_from_times": {"code": "class NonUniformSuite:\n    def time_lightcurve_creation_from_times(self, data):\n        stingray.lightcurve.Lightcurve.make_lightcurve(data.times, dt=1, gti=data.gti)\n\n    def setup_cache(self):\n        data = types.SimpleNamespace()\n        data.gti = np.array([[0, 1000]])\n        data.times_unsorted = np.random.uniform(\n            data.gti[0, 0], data.gti[-1, 1], 10000000\n        )\n    \n        data.times = np.sort(data.times_unsorted)\n        return data", "min_run_count": 2, "name": "benchmarks.NonUniformSuite.time_lightcurve_creation_from_times", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "benchmarks:19", "type": "time", "unit": "seconds", "version": "17f5b9801b076fa2a87a6d86c8b79064935c713925f6a40e38802bc79f5d54bc", "warmup_time": -1}, "benchmarks.NonUniformSuite.time_lightcurve_creation_from_times_no_gti": {"code": "class NonUniformSuite:\n    def time_lightcurve_creation_from_times_no_gti(self, data):\n        stingray.lightcurve.Lightcurve.make_lightcurve(data.times, dt=1)\n\n    def setup_cache(self):\n        data = types.SimpleNamespace()\n        data.gti = np.array([[0, 1000]])\n        data.times_unsorted = np.random.uniform(\n            data.gti[0, 0], data.gti[-1, 1], 10000000\n        )\n    \n        data.times = np.sort(data.times_unsorted)\n        return data", "min_run_count": 2, "name": "benchmarks.NonUniformSuite.time_lightcurve_creation_from_times_no_gti", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "benchmarks:19", "type": "time", "unit": "seconds", "version": "2309e45fbd886b91a921fd2d26dc0185077abe36b4087f876a325908b57da57f", "warmup_time": -1}, "benchmarks.PowerspectrumSuite.time_crossspectrum_from_events": {"code": "class PowerspectrumSuite:\n    def time_crossspectrum_from_events(self, data):\n        stingray.crossspectrum.AveragedCrossspectrum(\n            data.events0,\n            data.events1,\n            dt=data.dt,\n            gti=data.gti,\n            segment_size=data.segment_size,\n        )\n\n    def setup_cache(self):\n        data = types.SimpleNamespace()\n        data.gti = np.array([[0, 1000]])\n        data.times0 = np.sort(\n            np.random.uniform(data.gti[0, 0], data.gti[-1, 1], 10000000)\n        )\n        data.times1 = np.sort(\n            np.random.uniform(data.gti[0, 0], data.gti[-1, 1], 10000000)\n        )\n        data.times = np.sort(np.concatenate([data.times0, data.times1]))\n        data.dt = 0.1\n        data.segment_size = 100\n        data.events0 = stingray.events.EventList(data.times0, gti=data.gti)\n        data.events1 = stingray.events.EventList(data.times1, gti=data.gti)\n        data.lc0 = data.events0.to_lc(dt=data.dt)\n        data.lc1 = data.events1.to_lc(dt=data.dt)\n    \n        data.events = stingray.events.EventList(data.times, gti=data.gti)\n        data.lc = data.events.to_lc(dt=data.dt)\n        return data", "min_run_count": 2, "name": "benchmarks.PowerspectrumSuite.time_crossspectrum_from_events", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "benchmarks:71", "type": "time", "unit": "seconds", "version": "dda9a628025a568df36ae7dd80ca8b8ede3ec021b73ff619091376bcbff4c695", "warmup_time": -1}, "benchmarks.PowerspectrumSuite.time_crossspectrum_from_lc": {"code": "class PowerspectrumSuite:\n    def time_crossspectrum_from_lc(self, data):\n        stingray.crossspectrum.AveragedCrossspectrum(\n            data.lc0, data.lc1, segment_size=data.segment_size\n        )\n\n    def setup_cache(self):\n        data = types.SimpleNamespace()\n        data.gti = np.array([[0, 1000]])\n        data.times0 = np.sort(\n            np.random.uniform(data.gti[0, 0], data.gti[-1, 1], 10000000)\n        )\n        data.times1 = np.sort(\n            np.random.uniform(data.gti[0, 0], data.gti[-1, 1], 10000000)\n        )\n        data.times = np.sort(np.concatenate([data.times0, data.times1]))\n        data.dt = 0.1\n        data.segment_size = 100\n        data.events0 = stingray.events.EventList(data.times0, gti=data.gti)\n        data.events1 = stingray.events.EventList(data.times1, gti=data.gti)\n        data.lc0 = data.events0.to_lc(dt=data.dt)\n        data.lc1 = data.events1.to_lc(dt=data.dt)\n    \n        data.events = stingray.events.EventList(data.times, gti=data.gti)\n        data.lc = data.events.to_lc(dt=data.dt)\n        return data", "min_run_count": 2, "name": "benchmarks.PowerspectrumSuite.time_crossspectrum_from_lc", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "benchmarks:71", "type": "time", "unit": "seconds", "version": "b51eee759486da28c2b92f3cb306e6584a069f80646201a64df7b363201e7515", "warmup_time": -1}, "benchmarks.PowerspectrumSuite.time_powerspectrum_from_events": {"code": "class PowerspectrumSuite:\n    def time_powerspectrum_from_events(self, data):\n        stingray.powerspectrum.AveragedPowerspectrum(\n            data.events, dt=data.dt, segment_size=data.segment_size\n        )\n\n    def setup_cache(self):\n        data = types.SimpleNamespace()\n        data.gti = np.array([[0, 1000]])\n        data.times0 = np.sort(\n            np.random.uniform(data.gti[0, 0], data.gti[-1, 1], 10000000)\n        )\n        data.times1 = np.sort(\n            np.random.uniform(data.gti[0, 0], data.gti[-1, 1], 10000000)\n        )\n        data.times = np.sort(np.concatenate([data.times0, data.times1]))\n        data.dt = 0.1\n        data.segment_size = 100\n        data.events0 = stingray.events.EventList(data.times0, gti=data.gti)\n        data.events1 = stingray.events.EventList(data.times1, gti=data.gti)\n        data.lc0 = data.events0.to_lc(dt=data.dt)\n        data.lc1 = data.events1.to_lc(dt=data.dt)\n    \n        data.events = stingray.events.EventList(data.times, gti=data.gti)\n        data.lc = data.events.to_lc(dt=data.dt)\n        return data", "min_run_count": 2, "name": "benchmarks.PowerspectrumSuite.time_powerspectrum_from_events", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "benchmarks:71", "type": "time", "unit": "seconds", "version": "351c60761969e3613c94e7245cbbc406b00ccf8950d04f0f5951ac3bb95e4e80", "warmup_time": -1}, "benchmarks.PowerspectrumSuite.time_powerspectrum_from_lc": {"code": "class PowerspectrumSuite:\n    def time_powerspectrum_from_lc(self, data):\n        stingray.powerspectrum.AveragedPowerspectrum(\n            data.lc, segment_size=data.segment_size\n        )\n\n    def setup_cache(self):\n        data = types.SimpleNamespace()\n        data.gti = np.array([[0, 1000]])\n        data.times0 = np.sort(\n            np.random.uniform(data.gti[0, 0], data.gti[-1, 1], 10000000)\n        )\n        data.times1 = np.sort(\n            np.random.uniform(data.gti[0, 0], data.gti[-1, 1], 10000000)\n        )\n        data.times = np.sort(np.concatenate([data.times0, data.times1]))\n        data.dt = 0.1\n        data.segment_size = 100\n        data.events0 = stingray.events.EventList(data.times0, gti=data.gti)\n        data.events1 = stingray.events.EventList(data.times1, gti=data.gti)\n        data.lc0 = data.events0.to_lc(dt=data.dt)\n        data.lc1 = data.events1.to_lc(dt=data.dt)\n    \n        data.events = stingray.events.EventList(data.times, gti=data.gti)\n        data.lc = data.events.to_lc(dt=data.dt)\n        return data", "min_run_count": 2, "name": "benchmarks.PowerspectrumSuite.time_powerspectrum_from_lc", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "benchmarks:71", "type": "time", "unit": "seconds", "version": "b18d5bfabf1c2c90171e564d560c8e8df867da56f7cfb678385c4888c468e177", "warmup_time": -1}, "benchmarks.UniformSuite.time_lightcurve_creation_no_checks": {"code": "class UniformSuite:\n    def time_lightcurve_creation_no_checks(self, data):\n        stingray.lightcurve.Lightcurve(\n            data.times, data.counts, dt=data.dt, skip_checks=True, gti=data.gti\n        )\n\n    def setup_cache(self):\n        data = types.SimpleNamespace()\n        data.gti = np.array([[0, 1000]])\n        data.dt = 0.00003\n        data.times = np.arange(data.gti[0, 0], data.gti[-1, 1], data.dt)\n        data.counts = np.random.poisson(100, size=data.times.size)\n        return data", "min_run_count": 2, "name": "benchmarks.UniformSuite.time_lightcurve_creation_no_checks", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "benchmarks:48", "type": "time", "unit": "seconds", "version": "de06dde88c1c4d28cf177f4605ac74c67ecc519d76b9391aa2b80cf972ca9c15", "warmup_time": -1}, "benchmarks.UniformSuite.time_lightcurve_creation_with_checks": {"code": "class UniformSuite:\n    def time_lightcurve_creation_with_checks(self, data):\n        stingray.lightcurve.Lightcurve(data.times, data.counts)\n\n    def setup_cache(self):\n        data = types.SimpleNamespace()\n        data.gti = np.array([[0, 1000]])\n        data.dt = 0.00003\n        data.times = np.arange(data.gti[0, 0], data.gti[-1, 1], data.dt)\n        data.counts = np.random.poisson(100, size=data.times.size)\n        return data", "min_run_count": 2, "name": "benchmarks.UniformSuite.time_lightcurve_creation_with_checks", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "benchmarks:48", "type": "time", "unit": "seconds", "version": "9de6bc39b4c0d8ebb20095f5587684efacc2b507b64bc95d19430e1c3c48fab5", "warmup_time": -1}, "benchmarks_highmem.PowerspectrumSuite.time_crossspectrum_from_events": {"code": "class PowerspectrumSuite:\n    def time_crossspectrum_from_events(self, data):\n        stingray.crossspectrum.AveragedCrossspectrum(\n            data.events0,\n            data.events1,\n            dt=data.dt,\n            gti=data.gti,\n            segment_size=data.segment_size,\n        )\n\n    def setup_cache(self):\n        data = types.SimpleNamespace()\n        data.gti = np.array([[0, 3000]])\n        data.times0 = np.sort(\n            np.random.uniform(data.gti[0, 0], data.gti[-1, 1], 1_000_000)\n        )\n        data.times1 = np.sort(\n            np.random.uniform(data.gti[0, 0], data.gti[-1, 1], 1_000_000)\n        )\n        data.times = np.sort(np.concatenate([data.times0, data.times1]))\n        data.dt = 0.001\n        data.segment_size = 3\n        data.events0 = stingray.events.EventList(data.times0, gti=data.gti)\n        data.events1 = stingray.events.EventList(data.times1, gti=data.gti)\n        data.lc0 = data.events0.to_lc(dt=data.dt)\n        data.lc1 = data.events1.to_lc(dt=data.dt)\n    \n        data.events = stingray.events.EventList(data.times, gti=data.gti)\n        data.lc = data.events.to_lc(dt=data.dt)\n        return data", "min_run_count": 2, "name": "benchmarks_highmem.PowerspectrumSuite.time_crossspectrum_from_events", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "benchmarks_highmem:19", "type": "time", "unit": "seconds", "version": "6e91cd6c6aecb942b72fef568bc9a9972d850890521c22b2d9af72e76ea03ad4", "warmup_time": -1}, "benchmarks_highmem.PowerspectrumSuite.time_crossspectrum_from_lc": {"code": "class PowerspectrumSuite:\n    def time_crossspectrum_from_lc(self, data):\n        stingray.crossspectrum.AveragedCrossspectrum(\n            data.lc0, data.lc1, segment_size=data.segment_size\n        )\n\n    def setup_cache(self):\n        data = types.SimpleNamespace()\n        data.gti = np.array([[0, 3000]])\n        data.times0 = np.sort(\n            np.random.uniform(data.gti[0, 0], data.gti[-1, 1], 1_000_000)\n        )\n        data.times1 = np.sort(\n            np.random.uniform(data.gti[0, 0], data.gti[-1, 1], 1_000_000)\n        )\n        data.times = np.sort(np.concatenate([data.times0, data.times1]))\n        data.dt = 0.001\n        data.segment_size = 3\n        data.events0 = stingray.events.EventList(data.times0, gti=data.gti)\n        data.events1 = stingray.events.EventList(data.times1, gti=data.gti)\n        data.lc0 = data.events0.to_lc(dt=data.dt)\n        data.lc1 = data.events1.to_lc(dt=data.dt)\n    \n        data.events = stingray.events.EventList(data.times, gti=data.gti)\n        data.lc = data.events.to_lc(dt=data.dt)\n        return data", "min_run_count": 2, "name": "benchmarks_highmem.PowerspectrumSuite.time_crossspectrum_from_lc", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "benchmarks_highmem:19", "type": "time", "unit": "seconds", "version": "f9be7b4106b2b7792002f692be4d204a560cf5eb3ce1b382f189f15c45afdcbe", "warmup_time": -1}, "benchmarks_highmem.PowerspectrumSuite.time_powerspectrum_from_events": {"code": "class PowerspectrumSuite:\n    def time_powerspectrum_from_events(self, data):\n        stingray.powerspectrum.AveragedPowerspectrum(\n            data.events, dt=data.dt, segment_size=data.segment_size\n        )\n\n    def setup_cache(self):\n        data = types.SimpleNamespace()\n        data.gti = np.array([[0, 3000]])\n        data.times0 = np.sort(\n            np.random.uniform(data.gti[0, 0], data.gti[-1, 1], 1_000_000)\n        )\n        data.times1 = np.sort(\n            np.random.uniform(data.gti[0, 0], data.gti[-1, 1], 1_000_000)\n        )\n        data.times = np.sort(np.concatenate([data.times0, data.times1]))\n        data.dt = 0.001\n        data.segment_size = 3\n        data.events0 = stingray.events.EventList(data.times0, gti=data.gti)\n        data.events1 = stingray.events.EventList(data.times1, gti=data.gti)\n        data.lc0 = data.events0.to_lc(dt=data.dt)\n        data.lc1 = data.events1.to_lc(dt=data.dt)\n    \n        data.events = stingray.events.EventList(data.times, gti=data.gti)\n        data.lc = data.events.to_lc(dt=data.dt)\n        return data", "min_run_count": 2, "name": "benchmarks_highmem.PowerspectrumSuite.time_powerspectrum_from_events", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "benchmarks_highmem:19", "type": "time", "unit": "seconds", "version": "da7962a20f74d59fc0d0ff36de128ba5fa987af8bc7b93ad2fb595a2308173a1", "warmup_time": -1}, "benchmarks_highmem.PowerspectrumSuite.time_powerspectrum_from_lc": {"code": "class PowerspectrumSuite:\n    def time_powerspectrum_from_lc(self, data):\n        stingray.powerspectrum.AveragedPowerspectrum(\n            data.lc, segment_size=data.segment_size\n        )\n\n    def setup_cache(self):\n        data = types.SimpleNamespace()\n        data.gti = np.array([[0, 3000]])\n        data.times0 = np.sort(\n            np.random.uniform(data.gti[0, 0], data.gti[-1, 1], 1_000_000)\n        )\n        data.times1 = np.sort(\n            np.random.uniform(data.gti[0, 0], data.gti[-1, 1], 1_000_000)\n        )\n        data.times = np.sort(np.concatenate([data.times0, data.times1]))\n        data.dt = 0.001\n        data.segment_size = 3\n        data.events0 = stingray.events.EventList(data.times0, gti=data.gti)\n        data.events1 = stingray.events.EventList(data.times1, gti=data.gti)\n        data.lc0 = data.events0.to_lc(dt=data.dt)\n        data.lc1 = data.events1.to_lc(dt=data.dt)\n    \n        data.events = stingray.events.EventList(data.times, gti=data.gti)\n        data.lc = data.events.to_lc(dt=data.dt)\n        return data", "min_run_count": 2, "name": "benchmarks_highmem.PowerspectrumSuite.time_powerspectrum_from_lc", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "benchmarks_highmem:19", "type": "time", "unit": "seconds", "version": "51514ad1d7d1d3d45338e978eb36790584397809462e6642f546be27e53012bb", "warmup_time": -1}}, "machines": {"portabile2": {"arch": "x86_64", "cpu": "Intel(R) Core(TM) i7-7660U CPU @ 2.50GHz", "machine": "portabile2", "os": "Darwin 17.5.0", "ram": "17179869184", "version": 1}}, "tags": {"0.1rc1": 1941, "v0.1": 2202, "v0.1.1": 2218, "v0.1.2": 2220, "v0.1.3": 2223, "v0.2": 2570, "v0.3": 3026, "v1.0": 3642, "v1.0-beta": 3567, "v1.1": 3743, "v1.1.1": 3776, "v1.1.2": 3971, "v1.1.2.1": 4250, "v1.1.2.2": 4253, "v1.1.2.3": 4259, "v1.1.2.4": 4260, "v2.0.0": 4658, "v2.0.0rc2": 4647, "v2.0.0rc2.dev": 4606, "v2.0.0rc1": 4605}, "pages": [["", "Grid view", "Display as a agrid"], ["summarylist", "List view", "Display as a list"], ["regressions", "Show regressions", "Display information about recent regressions"]]}